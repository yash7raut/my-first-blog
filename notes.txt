
https://tutorial.djangogirls.org/en/django_start_project/


1. Django (/ˈdʒæŋɡoʊ/ jang-goh) is a free and open source web application framework, written in Python.
   A web framework is a set of components that helps you to develop websites faster and easier.

2. To create a new virtualenv, you need to open the command prompt and run python -m venv myvenv

3. Start your virtual environment by running: C:\Users\Name\djangogirls> myvenv\Scripts\activate

4. install Django > we should make sure we have the latest version of pip >  python -m pip install --upgrade pip

5. Create project: django-admin startproject mysite .

6. To create a database for our project > python manage.py migrate

7. we can start the web server by running python manage.py runserver

8. There is a concept in programming called object-oriented programming. The idea is that instead of writing everything as a boring 
   sequence of programming instructions, we can model things and define how they interact with each other.

9. So what is an object? It is a collection of properties and actions

10. So basically the idea is to describe real things in code with properties (called object properties) and actions (called methods).

11. To keep everything tidy, we will create a separate application inside our project
    To create an application we need to run the following command >  python manage.py startapp blog 

12. After creating an application, we also need to tell Django that it should use it.
    We do that in the file mysite/settings.py -- open it in your code editor.
    We need to find INSTALLED_APPS and add a line containing 'blog', just above ].

13. In the blog/models.py file we define all objects called Models – this is a place in which we will define our blog post.

14. This way your application knows what it should show to a user who opens that URL.
    In Django, we use something called URLconf (URL configuration). 
    URLconf is a set of patterns that Django will try to match the requested URL to find the correct view.

15. A view is a place where we put the "logic" of our application.

16. Views are just Python functions that are a little bit more complicated than the ones we wrote in the Introduction to Python chapter.

17. A template is a file that we can re-use to present different information in a consistent format – for example, you could use a template 
    to help you write a letter because although each letter might contain a different message and be addressed to a different person,
    they will share the same format.

18. A QuerySet is, in essence, a list of objects of a given Model.
    QuerySets allow you to read the data from the database, filter it and order it.

19. In a view we decide what (model) will be displayed in a template.

20. Django template tags allow us to transfer Python-like things into HTML,so you can build dynamic websites faster.

21. Another nice thing Django has for you is template extending.
    What does this mean? It means that you can use the same parts of your HTML for different pages of your website.

22. The nice thing about Django forms is that we can either define one from scratch or create a ModelForm which will save the result
    of the form to the model.
